//для того чтобы не прописывать логику в клиентском классе,
// в патерне стратегия контекст выносится в отдельный класс
public class Context {
    //контекст содержит ссылку на объект, по которой будет храниться доступ к конкретной стратегии
    private Strategy strategy;
    //необходимо создать конструктор для изменения стратегии в контексте в ходе выполнения программы
    public Context(Strategy strategy) {
        this.strategy = strategy;
    }
    //в контексте необходимо создать метод, который будет вызывать через поле стратегии,
    // метод, который будет реализовывать конкретную стратегию
    public String getCode(String id){
        return strategy.makeCode(id);
    }
}
